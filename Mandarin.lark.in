// vim: set syntax=lark: 
// Mandarin compiler
// Copyright (C) 2019  Alexander Korzun
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.

code: toplevel_statement*

?toplevel_statement: (function_definition | native_function_declaration) NL

native_function_declaration: KW_DEF KW_NATIVE IDENTIFIER "(" typed_arglist ")" NL

function_definition: KW_DEF IDENTIFIER "(" typed_arglist ")" NL code_block_end

typed_arglist: (typename IDENTIFIER ("," typename IDENTIFIER)* ","?)?

typename: IDENTIFIER

code_block_end: code_statement* KW_END

code_statement: expression NL

expression: front_atomic_expression (BINOP front_atomic_expression)*

front_atomic_expression: atomic_expression

atomic_expression: literal | IDENTIFIER | "(" expression ")"

literal: NUMBER | STRING_SINGLE | STRING_DOUBLE


KW_DEF: "def"
KW_NATIVE: "native"
KW_END: "end"
NUMBER: /[0-9]+/
STRING_SINGLE:      /'([^'\\]|\\.)*'/
STRING_DOUBLE:      /"([^"\\]|\\.)*"/

IDENTIFIER: /[a-zA-Z_][a-zA-Z0-9_]*/

BINOP: "*"
    | "/"
    | "%"
    | "//"
    | "+"
    | "-"
    | "..."
    | ".."
    | "=="
    | "<="
    | ">="
    | "!="
    | "<"
    | ">"
    | "&&"
    | "||"
    | "++"
    | "+="
    | "-="
    | "*="
    | "/="
    | "//="
    | "%="
    | "="

NL: "\r\n" | "\n"

WS: /[ \t]+/
%ignore WS
